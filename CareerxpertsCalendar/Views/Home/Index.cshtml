@using CareerxpertsCalendar.Helper
@model List<MonthModel>
@{
    ViewData["Title"] = "Custom Calendar";

}

<h2>Custom Calendar - @Model.First().Year</h2>


<table border="1">
    <tr>
        <th rowspan="4" onclick="changeYear(-1)">◄</th>
        <th colspan="3" rowspan="4">@Model.First().Year</th>
        <th rowspan="4" onclick="changeYear(1)">►</th>

    </tr>
    @{
        var remainingMonths = new List<MonthModel>(Model);
    }

    <tr>
        @for (var i = 1; i < 8; i++)
        {
            var month = Comman.GetMonthsStartingOnDay(i, remainingMonths);
            if(month != null)
            {

                <th class="month color-@month.Days.Count()">
                    @month.Name @month.Days.Count()
                </th>
            }
            else
            {
                <th class="month">
                    
                </th>
            }
        }
    </tr>
    <tr>
        @for (var i = 1; i < 8; i++)
        {
            var month = Comman.GetMonthsStartingOnDay( i  , remainingMonths);
            if (month != null)
            {

                <th class="month">
                    @month.Name @month.Days.Count()
                </th>
            }
            else
            {
                <th class="month">

                </th>
            }
        }
    </tr>
    <tr>
        @for (var i = 1; i < 8; i++)
        {
            var month = Comman.GetMonthsStartingOnDay( i  , remainingMonths);
            if (month != null)
            {

                <th class="month">
                    @month.Name @month.Days.Count()
                </th>
            }
            else
            {
                <th class="month">

                </th>
            }
        }
    </tr>


    @for (int i = 1; i <= 7; i++)
    {
        <tr>
            <th>@i</th>
            <th>@(i + 7)</th>
            <th>@(i + 14)</th>
            <th>@(i + 21)</th>
            <th>@(i + 28 <= 31 ? i + 28 : "")</th>
            @for (int j = 0; j < 7; j++)
            {
                var dayOfWeek = (j + i + 7) % 7;
                var dayName = Enum.GetName(typeof(DayOfWeek), dayOfWeek).Substring(0, 3).ToUpper();
                var cssClass = dayOfWeek == 0 ? "sunday" : ""; // Apply "sunday" class to Sunday (0)

                <td class="@cssClass">@dayName</td>
            }
        </tr>
    }
</table>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        let months = document.querySelectorAll(".month");
        let daysOfWeek = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];

        months.forEach(month => {
            let startDay = month.getAttribute("data-start");
            let dayIndex = daysOfWeek.indexOf(startDay);
            month.style.order = dayIndex;
        });
    });
    function changeYear(offset) {
        let currentYear = @Model.First().Year;
        window.location.href = `/Home/Index?year=${currentYear + offset}`;
    }
</script>
